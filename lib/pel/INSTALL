INSTALL file for PEL: PHP Exif Library.  A library with support for
reading and writing Exif headers in JPEG and TIFF images using PHP.

Copyright (C) 2004, 2005, 2006  Martin Geisler.
Licensed under the GNU GPL, see COPYING for details.


Requirements
************

PEL requires PHP version 5, which was released in July 2004. If your
provider still uses PHP 4, then ask them politely to upgrade.

People using Debian GNU/Linux Etch can easily install PHP 5 from the
normal Debian repository. For Debian Sarge one can use the packages
found at http://people.debian.org/~dexter/dists/all/ or those at
http://dotdeb.org/.

Binaries for Windows are available from http://php.net/, where one
also finds the source code for those who want to build PHP 5
themselves.


Installation
************

PEL is installed by downloading it and unpacking it in a directory of
your choice.  Your application can then start using the classed
defined in PEL, most likely the PelJpeg class which contain an entire
JPEG image or the PelTiff class for working with TIFF images.

It is important to understand that PEL is a library and not an
application with a pretty interface --- PEL is a collection of classes
that can be used to parse, read, and write Exif headers.


Upgrading
*********

If you have already been using a previous version of PEL, then be sure
to read the NEWS file before starting with a new version.  The goal of
the NEWS file is to list the important changes in a more concise way
that the ChangeLog file (which lists *every* little change).


Using PEL
*********

Your application should include PelJpeg.php or PelTiff.php for working
with JPEG or TIFF files.  The files will define the PelJpeg and
PelTiff classes, which can hold a JPEG or TIFF image, respectively.
Please see the API documentation in the doc directory or online at

  http://pel.sourceforge.net/doc/

for the full story about those classes and all other available classes
in PEL.

Still, an example would be good.  The following example will load a
JPEG file given as a command line argument, parse the Exif data
within, change the image description to 'Edited by PEL', and finally
save the file again.  All in just six lines of code:

  <?php
  require_once('PelJpeg.php');
  
  $jpeg = new PelJpeg($argv[1]);
  
  $ifd0 = $jpeg->getExif()->getTiff()->getIfd();
  $entry = $ifd0->getEntry(PelTag::IMAGE_DESCRIPTION);
  $entry->setValue('Edited by PEL');
  file_put_contents($argv[1], $jpeg->getBytes());
  ?>

See the examples directory for this example (or rather a more
elaborate version in the file edit-description.php) and others as PHP
files.  You may have to adjust the path to PHP, found in the very
first line of the files before you can execute them.


Changing PEL
************

If you find a bug in PEL then please send a report back so that it can
be fixed in the next version.  You can submit your bugs and other
requests here:

  http://sourceforge.net/tracker/?group_id=108380

If you change the code (to fix bugs or to implement enhancements), it
is highly recommended that you test your changes against known good
data.  Please see the test/README file for more information about
running the PEL test suite.
